name: PlatformIO CI
on:
    push:
    release:
        types: [published]

jobs:
    build:
        runs-on: ubuntu-latest
        strategy:
            fail-fast: true
            matrix:
                environment: [mk4, mk5, mk6, mk7, mk7-debug, native]
        steps:
            - uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Cache PlatformIO
              uses: actions/cache@v4
              with:
                  path: |
                      ~/.cache/pip
                      ~/.platformio/.cache
                  key: ${{ runner.os }}-pio

            - name: Set up Python
              uses: actions/setup-python@v5
              with:
                  python-version: "3.9"

            - name: Install PlatformIO
              run: |
                  pip install --upgrade platformio

            - name: Cache project build cache for ${{ matrix.environment }}
              uses: actions/cache@v4
              with:
                  path: |
                      .pio/build-cache
                  key: ${{ runner.os }}-${{ matrix.environment }}-build-cache

            - name: Build application (${{ matrix.environment }})
              if: matrix.environment != 'native'
              run: pio run --environment ${{ matrix.environment }}

            - name: Rename firmware artifact
              if: matrix.environment != 'native'
              run: cp ${{ github.workspace }}/.pio/build/${{ matrix.environment }}/firmware.bin ugly-duckling-${{ matrix.environment }}.bin

            - name: Upload firmware artifact
              if: matrix.environment != 'native'
              uses: actions/upload-artifact@v4
              with:
                  name: firmware-${{ matrix.environment }}
                  path: ugly-duckling-${{ matrix.environment }}.bin
                  if-no-files-found: error

            - name: Run unit tests
              if: matrix.environment == 'native'
              run: pio test --environment native

    release:
        needs: build
        if: startsWith(github.ref, 'refs/tags/')
        runs-on: ubuntu-latest
        steps:
            - name: Download artifacts
              uses: actions/download-artifact@v4

            - name: Display structure of downloaded files
              run: ls -R

            - name: Release
              uses: AButler/upload-release-assets@v3.0
              with:
                  files: firmware-*/*
                  repo-token: ${{ secrets.GITHUB_TOKEN }}
